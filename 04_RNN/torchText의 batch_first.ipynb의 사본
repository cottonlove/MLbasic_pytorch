{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"torchText의 batch_first.ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO28YTIVQSzAmzxK0ytSKRD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["토치텍스트에서 배치퍼스트(batch_first)를 True로 한 경우와 False를 한 경우를 비교해보겠습니다.\n","\n","text의 field에서는 batch_first를 True해줘야할 듯!!?"],"metadata":{"id":"2eZLoWOyEpuh"}},{"cell_type":"markdown","source":["## 1. 훈련 데이터와 테스트 데이터로 분리하기"],"metadata":{"id":"0ro4IagqEzjl"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sFhiTkA5Elq9","executionInfo":{"status":"ok","timestamp":1647691775468,"user_tz":-540,"elapsed":9269,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"c21a9961-4978-4e01-fbea-c051efd412a2"},"outputs":[{"output_type":"stream","name":"stdout","text":["전체 샘플의 개수 : 50000\n"]}],"source":["import urllib.request\n","import pandas as pd\n","\n","#인터넷에서 IMDB 리뷰 데이터를 다운로드 받습니다.\n","urllib.request.urlretrieve(\"https://raw.githubusercontent.com/LawrenceDuan/IMDb-Review-Analysis/master/IMDb_Reviews.csv\", filename=\"IMDb_Reviews.csv\")\n","\n","#다운로드한 IMDB 리뷰 데이터를 데이터프레임에 저장합니다.\n","df = pd.read_csv('IMDb_Reviews.csv', encoding='latin1')\n","\n","print('전체 샘플의 개수 : {}'.format(len(df)))\n","\n","#25,000개씩 분리하여 훈련 데이터와 테스트 데이터로 분리해보겠습니다.\n","train_df = df[:25000]\n","test_df = df[25000:]\n","\n","\n","train_df.to_csv(\"train_data.csv\", index=False)\n","test_df.to_csv(\"test_data.csv\", index=False) #index=False를 하면 인덱스를 저장하지 않습니다."]},{"cell_type":"code","source":["import os\n","print(os.getcwd())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z6LmXjAbFZ05","executionInfo":{"status":"ok","timestamp":1647691837505,"user_tz":-540,"elapsed":372,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"3f342a27-ae00-4829-a11c-e4088a2cbf38"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["/content\n"]}]},{"cell_type":"markdown","source":["## 2. 필드 정의하기 (torchtext.legacy.data)"],"metadata":{"id":"bLnpOLj_Fjya"}},{"cell_type":"code","source":["#필드 정의\n","from torchtext.legacy import data\n","\n","# 필드 정의\n","TEXT = data.Field(sequential=True,\n","                  use_vocab=True,\n","                  tokenize=str.split,\n","                  lower=True,\n","                  batch_first=True, # <== 이 부분을 True로 합니다.\n","                  fix_length=20)\n","\n","LABEL = data.Field(sequential=False,\n","                   use_vocab=False,\n","                   batch_first=False,\n","                   is_target=True)"],"metadata":{"id":"Iv2TcCtEFn2r","executionInfo":{"status":"ok","timestamp":1647691983397,"user_tz":-540,"elapsed":327,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["* batch_first : 미니 배치 차원을 맨 앞으로 하여 데이터를 불러올 것인지 여부. (False가 기본값)"],"metadata":{"id":"N2tVvO0MFwK4"}},{"cell_type":"markdown","source":["## 3. Dataset/Vocabulary/DataLoader 만들기"],"metadata":{"id":"GkklF4mYF0BK"}},{"cell_type":"code","source":["from torchtext.legacy.data import TabularDataset\n","from torchtext.legacy.data import Iterator\n","\n","# TabularDataset은 데이터를 불러오면서 필드에서 정의했던 토큰화 방법으로 토큰화를 수행합니다.\n","train_data, test_data = TabularDataset.splits(\n","        path='.', train='train_data.csv', test='test_data.csv', format='csv',\n","        fields=[('text', TEXT), ('label', LABEL)], skip_header=True)\n","\n","# 정의한 필드에 .build_vocab() 도구를 사용하면 단어 집합을 생성합니다.\n","TEXT.build_vocab(train_data, min_freq=10, max_size=10000) # 10,000개의 단어를 가진 단어 집합 생성\n","\n","# 배치 크기를 정하고 첫번째 배치를 출력해보겠습니다.\n","batch_size = 5\n","train_loader = Iterator(dataset=train_data, batch_size = batch_size)\n","batch = next(iter(train_loader)) # 첫번째 미니배치"],"metadata":{"id":"eUg4xPnJGNR9","executionInfo":{"status":"ok","timestamp":1647692047607,"user_tz":-540,"elapsed":9035,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["print(batch.text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E5Bi5MeHGVkN","executionInfo":{"status":"ok","timestamp":1647692051594,"user_tz":-540,"elapsed":24,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"f21cda18-8e2e-47d0-ba5a-fb54970c04c5"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[6110,    0,    0,    7,    3,   87,  108,   95,  425,    0,   41,   87,\n","            0, 4409,    0,   87,  975,    4,  311,  299],\n","        [  60, 4501,   50, 4988,    4,  239,    0, 7163,   11,   14,   76,   33,\n","          194,  196,   11,   54,  328,   58,   20,    0],\n","        [  10,    7,    3,  410,  596,  841,    0,    3,  216,    5,    0,    0,\n","            3,  216,    5,    0,   36,  401, 2801,   60],\n","        [  44,  291,   94,    2,  151,   77,    5,  366,    0,    0,    0,    0,\n","          407,   28,    0,  668,   44,  291,   94,    3],\n","        [  44,   24,  336,  127,   37,  293,    0, 1544, 1518,  179, 1099,    0,\n","          895,   10, 1220, 6338,   29,   36, 4373,   11]])\n"]}]},{"cell_type":"markdown","source":["배치 크기가 5이기 때문에 5개의 샘플이 출력되는 것을 볼 수 있습니다. \n","\n","각 샘플의 길이는 20의 길이를 가지는데, 이는 앞서 초기에 필드를 정의할 때 fix_length를 20으로 정해주었기 때문입니다. \n","\n","다시 말해 하나의 미니 배치의 크기는 (배치 크기 × fix_length)이다."],"metadata":{"id":"ZQhRe_SBHDQO"}},{"cell_type":"markdown","source":["미니 배치의 크기를 출력해봅시다."],"metadata":{"id":"cpiWLpDWGaBH"}},{"cell_type":"code","source":["print(batch.text.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4IhuTIMPGbeq","executionInfo":{"status":"ok","timestamp":1647692078274,"user_tz":-540,"elapsed":6,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"60aa85a5-9c99-406b-a530-56ac6d55c6b9"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([5, 20])\n"]}]},{"cell_type":"markdown","source":["**batch_first를 False로 한 경우를 보겠습니다.**"],"metadata":{"id":"t__GFdfMGfBn"}},{"cell_type":"markdown","source":["## 4. 필드 재정의하기"],"metadata":{"id":"4BcNU2aSGkpi"}},{"cell_type":"code","source":["# 필드 정의\n","TEXT = data.Field(sequential=True,\n","                  use_vocab=True,\n","                  tokenize=str.split,\n","                  lower=True,\n","                  fix_length=20) \n","#TEXT 필드에서 batch_first = True 인자를 제거하였습니다. 기본값이 False이므로 batch_first의 값이 False가 됩니다.\n","\n","LABEL = data.Field(sequential=False,\n","                   use_vocab=False,\n","                   batch_first=False,\n","                   is_target=True)"],"metadata":{"id":"6lurWWnkGpYa","executionInfo":{"status":"ok","timestamp":1647692147845,"user_tz":-540,"elapsed":437,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["필드를 재정의하였으므로 데이터셋, 단어 집합, 데이터로더를 만드는 과정을 다시 수행해주어야 합니다."],"metadata":{"id":"mDv02auqGwCK"}},{"cell_type":"code","source":["from torchtext.legacy.data import TabularDataset\n","from torchtext.legacy.data import Iterator\n","\n","# TabularDataset은 데이터를 불러오면서 필드에서 정의했던 토큰화 방법으로 토큰화를 수행합니다.\n","train_data, test_data = TabularDataset.splits(\n","        path='.', train='train_data.csv', test='test_data.csv', format='csv',\n","        fields=[('text', TEXT), ('label', LABEL)], skip_header=True)\n","\n","# 정의한 필드에 .build_vocab() 도구를 사용하면 단어 집합을 생성합니다.\n","TEXT.build_vocab(train_data, min_freq=10, max_size=10000) # 10,000개의 단어를 가진 단어 집합 생성\n","\n","# 배치 크기를 정하고 첫번째 배치를 출력해보겠습니다.\n","batch_size = 5\n","train_loader = Iterator(dataset=train_data, batch_size = batch_size)\n","batch = next(iter(train_loader)) # 첫번째 미니배치"],"metadata":{"id":"3jqOH3oSGx-5","executionInfo":{"status":"ok","timestamp":1647692178866,"user_tz":-540,"elapsed":8170,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# 첫번째 미니 배치 출력\n","print(batch.text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zlgg4qQoG1-Z","executionInfo":{"status":"ok","timestamp":1647692188472,"user_tz":-540,"elapsed":574,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"a21ac4d0-8f42-40f8-faa7-d876b4b6b516"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[6110,   60,   10,   44,   44],\n","        [   0, 4501,    7,  291,   24],\n","        [   0,   50,    3,   94,  336],\n","        [   7, 4988,  410,    2,  127],\n","        [   3,    4,  596,  151,   37],\n","        [  87,  239,  841,   77,  293],\n","        [ 108,    0,    0,    5,    0],\n","        [  95, 7163,    3,  366, 1544],\n","        [ 425,   11,  216,    0, 1518],\n","        [   0,   14,    5,    0,  179],\n","        [  41,   76,    0,    0, 1099],\n","        [  87,   33,    0,    0,    0],\n","        [   0,  194,    3,  407,  895],\n","        [4409,  196,  216,   28,   10],\n","        [   0,   11,    5,    0, 1220],\n","        [  87,   54,    0,  668, 6338],\n","        [ 975,  328,   36,   44,   29],\n","        [   4,   58,  401,  291,   36],\n","        [ 311,   20, 2801,   94, 4373],\n","        [ 299,    0,   60,    3,   11]])\n"]}]},{"cell_type":"markdown","source":["하나의 미니 배치의 크기는 (fix_length × 배치 크기)입니다."],"metadata":{"id":"KX0jfuLPHL77"}},{"cell_type":"code","source":["print(batch.text.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Msi2q5ZiHN3r","executionInfo":{"status":"ok","timestamp":1647692281141,"user_tz":-540,"elapsed":432,"user":{"displayName":"박윤정","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07255778251027257626"}},"outputId":"cb878ecc-94bf-4c82-f355-0e0897d75232"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["torch.Size([20, 5])\n"]}]}]}